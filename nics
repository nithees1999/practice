const express = require('express');
const mysql = require('mysql');
const cors = require("cors");

const app = express();
app.use(cors());
app.use(express.json());

const db = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "Test",
})

// AutoApproval
// Get State
app.get('/api/getApprovalStates', (req, res) => {
  const sql = 'SELECT DISTINCT State FROM autoapproval';
  db.query(sql, (err, results) => {
      if (err) throw err;
      res.json(results.map(row => row.State));
  });
});
// Get Tier
app.get('/api/getApprovalTier', (req, res) => {
  const sql = 'SELECT DISTINCT Tier FROM autoapproval';
  db.query(sql, (err, results) => {
      if (err) throw err;
      res.json(results.map(row => row.Tier));
  });
});
// Get all data (initial page load)
app.get('/api/autoapproval', (req, res) => {
  const sql = 'SELECT * FROM autoapproval';
  db.query(sql, (err, results) => {
      if (err) {
          console.error('Error fetching data:', err);
          res.status(500).json({ error: 'Internal Server Error' });
          return;
      }
      res.json(results);
  });
});
// Filter Data
app.post('/api/autoapproval', (req, res) => {
  const { State, FicoScore, Tier } = req.body;
  let sql = `
      SELECT "First Name", "Last Name", "House", "Street Name", "Street Type", "City", "State", "Zip Code", "SSN", "FICO Score", "Tier"
      FROM autoapproval
      WHERE State = 1=1;
  `;
  let queryParams = [ ];
  if (State) {
    sql += ' AND "State" = ?';
    queryParams.push(State);
}
  if (FicoScore) {
      sql += ' AND "FICO Score" = ?';
      queryParams.push(FicoScore);
  }
  if (Tier) {
      sql += ' AND "Tier" = ?';
      queryParams.push(Tier);
  }
  db.query(sql, queryParams, (err, results) => {
      if (err) {
          console.error('Error filtering data:', err);
          return res.status(500).json({ error:'Internal Server Error' });
      }
      res.json(results);
  });
});
// Sending response to the client
app.get('/', (req, res) => {
  return res.json("From Backend Side")
});
// Run on local machine
app.listen(8080, () => {
  console.log("listening on http://localhost:8080")
});
