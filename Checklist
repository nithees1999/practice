import { FaSearch, FaHome } from "react-icons/fa";
import React, { useEffect, useState } from "react";
import axios from "axios";
const Checklist = () => {
    const [formState, setFormState] = useState({
      Description: '',
    });

    const [description, setDescription] = useState([]);
    const [filteredData, setFilteredData] = useState([]);
    const [loading, setLoading] = useState(false);
    useEffect(() => {
        const fetchData = async () => {
            try {
                const [customerDataResponse, descriptionResponse] = await Promise.all([
                    axios.get('http://localhost:8080/api/Checklist'),
                    axios.get('http://localhost:8080/api/getDescription'),
                   
                ]);
           
                setDescription(descriptionResponse.data);
           
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        };
        fetchData();
    }, []);
    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormState(prevState => ({
            ...prevState,
            [name]: value,
        }));
    };
    const handleSearch = async (e) => {
        e.preventDefault();
        setLoading(true);
        try {
            const response = await axios.post('http://localhost:8080/api/Checklist', formState);
            setFilteredData(response.data);
        } catch (error) {
            console.error('Error fetching filtered data:', error);
        } finally {
            setLoading(false);
        }
    };
    const handleReset = async () => {
        setFormState({
            Description: '',
        });
        try {
            const response = await axios.get('http://localhost:8080/api/Checklist');
            setFilteredData(response.data);
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    };
 
    return (
        <div className="p-2">
            <h1 className="text-center text-xl font-bold p-2 text-blue-700">CheckList</h1>
            <form
                className="conditionsNav p-2 m-2 border border-black rounded-md flex justify-start lg:justify-center items-center gap-1 flex-wrap"
                onSubmit={handleSearch}
            >

                <div>
                    <label className="px-1 font-medium" htmlFor="Description">Description:</label>
                    <select
                        className="border border-black rounded p-1 w-32"
                        name="Description"
                        id="Description"
                        value={formState.Description}
                        onChange={handleChange}
                    >
                        <option value="">Select Description</option>
                        {description.map((type, index) => (
                            <option key={index} value={type}>{type}</option>
                        ))}
                    </select>
                </div>
                <button type="submit" className="rounded-full p-2 mx-2 border border-black">
                    <FaSearch />
                </button>
                <button type="button" onClick={handleReset} className="rounded-full p-2 mx-2 border border-black">
                    <FaHome />
                </button>
                {loading && <div>Loading...</div>}
            </form>
            <section className="min-h-screen py-8 px-4 m-2 border border-black rounded-md">
                <table className="w-full">
                    <thead className="border border-black">
                        <tr>
                            <th className="p-4 border border-black text-blue-700">Category</th>
                            <th className="p-4 border border-black text-blue-700">Active</th>
                            <th className="p-4 border border-black text-blue-700">Validation Type</th>
                        </tr>
                    </thead>
                    <tbody className="border border-black">
                        {filteredData.length === 0 && !loading ? (
                            <tr>
                                <td colSpan="13" className="p-4 text-center">No data available</td>
                            </tr>
                        ) : (
                            filteredData.map((item, index) => (
                                <tr key={index} className="text-center">
                                   
                                    <td className="p-2 border border-black">{item.Category}</td>
                                    <td className="p-2 border border-black">{item.Active}</td>
                                    <td className="p-2 border border-black">{item.Validation_Type}</td>
                                </tr>
                            ))
                        )}
                    </tbody>
                </table>
            </section>
        </div>
    );
};
export default Checklist;
