import { FaSearch } from "react-icons/fa";
import React, { useEffect, useState } from "react";
import "../Components/AutoApprovalCustomerDetails.css";

    
    
    
    const AutoApprovalCustomerDetails=()=>{
    const [states, setStates] = useState([]);
    const[selectedState,setSelectedState]=useState('');
    const[ficoScore, setFicoScore]=useState('');
    const[tier, setTier]=useState('');
    const [data, setData]=useState([]);
    const[loading, setLoading]=useState(false);

 

    useEffect(() => {
        fetch('http://localhost:8080/autoapproval')
            .then(response => response.json())
            .then(data => setStates(data))
            .catch(error => console.error('Error fetching states:',error));
    }, []);



    const calculateTier=(score)=>
    {
        if(score=>760)
        return 'Tier 1';
        if(score=>720)
        return 'Tier 2';
        if(score=>710)
        return 'Tier 3';
        return 'No Tier';
    };

    useEffect(()=>{
        if(ficoScore){
            setTier(calculateTier(Number(ficoScore)));

        }else{
            setTier('');
        }
    }, [ficoScore]);

    const handleSearch=()=>{
        setLoading(true);
        fetch('http://localhost:8080/autoapproval',{
            method:'POST',
            headers:{
                'Content-Type':'application/json',},
                body: JSON.stringify({
                    State: selectedState,
                    ficoScore: ficoScore,
                    tier: tier,
                }),
            })
            .then(response => response.json())
            .then(data=>{
                setData(data);
                setLoading(false);

            })
            .catch (error=>{
                console.error('Error fetching filtered data:', error);
                setLoading(false);

            });
        };













    return (
        <div className="CustomerDetails">
            <form
                className="conditionsNav p-2 m-2 border-2 border-black rounded-md flex justify-center items-center gap-2 flex-wrap"
              
            >

                <div>
                    <label  className="px-2" htmlFor="State">State:</label>
                    <select
                        className="border-2 border-black rounded p-2"
                        name="State"
                        id="State"
                        value={selectedState}
                        onChange={(e)=> setSelectedState(e.target.value)}>
                    
                        <option value=" ">Select State</option>
                        {states.map((State, index)=>(
                        <option key={index} value={State}>{State}</option>
                        ))}
                        </select>
                </div>


                <div>
                    <label className="px-2" htmlFor="fico-score">FICO Score:</label>
                    <input
                        className="border-2 border-black rounded p-2"
                        type="number"
                        value={ficoScore}
                       
                        onChange={(e)=>setFicoScore(e.target.value)}
                    />
                </div>




                <div>
                    <label className="px-2" htmlFor="tier">Tier:</label>
                    <input
                        className="border-2 border-black rounded p-2"
                        id="tier"
                        type="number"
                        value={tier}readOnly
                    />
                </div>

         

                

            

                <button className="rounded px-4 py-3 border-2 border-black" onClick={handleSearch}>
                    <FaSearch />
                </button>
                {loading && <div>Loading...</div>}
            </form>















            <section className="min-h-screen py-8 px-4 m-2 border-2 border-black rounded-md">
                <table className="w-full">
                    <thead className="border-2 border-black">
                        <tr>
                            <th className="p-4 border-2 border-black">First Name</th>
                            <th className="p-4 border-2 border-black">Last Name</th>
                            <th className="p-4 border-2 border-black">House</th>
                            <th className="p-4 border-2 border-black">Street Name</th>
                            <th className="p-4 border-2 border-black">Street Type</th>
                            <th className="p-4 border-2 border-black">City</th>
                            <th className="p-4 border-2 border-black">State</th>
                            <th className="p-4 border-2 border-black">Zip Code</th>
                            <th className="p-4 border-2 border-black">SSN</th>
                            <th className="p-4 border-2 border-black">FICO Score</th>
                            <th className="p-4 border-2 border-black">Tier</th>
                        </tr>
                    </thead>



                    <tbody className="border-2 border-black">
                    {data.map(item => (
                                <tr key={item.id} className="text-center">
                                    <td className="p-2 border-2 border-black">{item.FirstName}</td>
                                    <td className="p-2 border-2 border-black">{item.LastName}</td>
                                    <td className="p-2 border-2 border-black">{item.House}</td>
                                    <td className="p-2 border-2 border-black">{item.StreetName}</td>
                                    <td className="p-2 border-2 border-black">{item.StreetType}</td>
                                    <td className="p-2 border-2 border-black">{item.City}</td>
                                    <td className="p-2 border-2 border-black">{item.State}</td>
                                    <td className="p-2 border-2 border-black">{item.ZipCode}</td>
                                    <td className="p-2 border-2 border-black">{item.SSN}</td>
                                    <td className="p-2 border-2 border-black">{item.FICOScore}</td>
                                    <td className="p-2 border-2 border-black">{item.Tier}</td>
                                    

                                </tr>
                            ))}
                    </tbody>

                </table>
            </section>
        </div>
    );
};
export default AutoApprovalCustomerDetails;