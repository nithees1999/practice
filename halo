import React, { useEffect, useState } from 'react';

import axios from 'axios';

const HaloPage = () => {

    const [haloData, setHaloData] = useState([]);

    const [filters, setFilters] = useState({

        productType: '',

        condition: '',

        employmentStatusApp: '',

        employmentStatusCoApp: '',

    });

    const [filteredData, setFilteredData] = useState([]);

    useEffect(() => {

        const fetchData = async () => {

            const response = await axios.get('/api/halo-data'); // Update with your API endpoint

            setHaloData(response.data);

        };

        fetchData();

    }, []);

    const handleChange = (e) => {

        const { name, value } = e.target;

        setFilters((prevFilters) => ({

            ...prevFilters,

            [name]: value,

        }));

    };

    const handleSearch = (e) => {

        e.preventDefault(); // Prevent the default form submission behavior

        const { productType, condition, employmentStatusApp, employmentStatusCoApp } = filters;

        const filtered = haloData.filter((item) => {

            return (

                (productType ? item.ProductType === productType : true) &&

                (condition ? item.Condition === condition : true) &&

                (employmentStatusApp ? item.EmploymentStatusApp === employmentStatusApp : true) &&

                (employmentStatusCoApp ? item.EmploymentStatusCoApp === employmentStatusCoApp : true)

            );

        });

        setFilteredData(filtered);

    };

    const uniqueProductTypes = [...new Set(haloData.map(item => item.ProductType))];

    const uniqueConditions = [...new Set(haloData.map(item => item.Condition))];

    const uniqueEmploymentStatusesApp = [...new Set(haloData.map(item => item.EmploymentStatusApp))];

    const uniqueEmploymentStatusesCoApp = [...new Set(haloData.map(item => item.EmploymentStatusCoApp))];

    return (
        <>
            <h1 className="text-center text-xl font-bold p-2 text-blue-700">Halo Page</h1>
            <form
                className="conditionsNav p-2 m-2 border border-black rounded-md flex justify-start lg:justify-center items-center gap-1 flex-wrap"
                onSubmit={handleSearch} 
            >
                <section>
                <label className="px-1 font-medium" htmlFor="producttype">Product Type:</label>
                    <select name="productType" id="productType" onChange={handleChange} className="border border-black rounded p-2" required>
                        <option value="">NA</option>

                        {uniqueProductTypes.map(type => (
                            <option key={type} value={type}>{type}</option>

                        ))}
                    </select>
                </section>
                <section>
                <label className="px-1 font-medium" htmlFor="condition">Condition:</label>
                    <select name="condition" id="condition" onChange={handleChange} className="border border-black rounded p-2" required>
                        <option value="">NA</option>

                        {uniqueConditions.map(cond => (
                            <option key={cond} value={cond}>{cond}</option>

                        ))}
                    </select>
                </section>
                <section>
                    <label className="px-1 font-medium" htmlFor="employmentStatusApp">Employment Status (App):</label>
                    <select name="employmentStatusApp" id="employmentStatusApp" onChange={handleChange} className="border border-black rounded p-2" required>
                        <option value="">NA</option>

                        {uniqueEmploymentStatusesApp.map(status => (
                            <option key={status} value={status}>{status}</option>

                        ))}
                    </select>
                </section>
                <section>
                    <label className="px-1 font-medium" htmlFor="employmentStatusCoApp">Employment Status (Co-App):</label>
                    <select name="employmentStatusCoApp" id="employmentStatusCoApp" onChange={handleChange} className="border border-black rounded p-2" required>
                        <option value="">NA</option>

                        {uniqueEmploymentStatusesCoApp.map(status => (
                            <option key={status} value={status}>{status}</option>

                        ))}
                    </select>
                </section>
                <button type="submit" className="rounded-md p-2 mx-2 border border-black">Submit</button>
            </form>

          <section className="min-h-screen py-8 px-4 m-2 border border-black rounded-md">
                <div style={{ overflowX: 'auto' }}>
                    <table className="w-full">
                        <thead className="border border-black">
                    <tr>
                        <th className="p-4 border border-black text-blue-700">Product Type</th>
                        <th className="p-4 border border-black text-blue-700">Condition</th>
                        <th className="p-4 border border-black text-blue-700">VIN</th>
                        <th className="p-4 border border-black text-blue-700">Year</th>
                        <th className="p-4 border border-black text-blue-700">Make</th>
                        <th className="p-4 border border-black text-blue-700">Model</th>
                        <th className="p-4 border border-black text-blue-700">Term</th>
                        <th className="p-4 border border-black text-blue-700">Co-Applicant</th>
                        <th className="p-4 border border-black text-blue-700">Employment Status (Applicant)</th>
                        <th className="p-4 border border-black text-blue-700">Employment Status (Co-Applicant)</th>
                        <th className="p-4 border border-black text-blue-700">Buy Rate</th>
                        <th className="p-4 border border-black text-blue-700">Adjusted Rate</th>
                        <th className="p-4 border border-black text-blue-700">Difference</th>
                        <th className="p-4 border border-black text-blue-700">Rule</th>
                        <th className="p-4 border border-black text-blue-700">Override Level</th>
                    </tr>
                </thead>
                <tbody>

                    {filteredData.length > 0 ? (

                        filteredData.map((item, index) => (
                            <tr key={index}>
                                <td className="p-2 border border-black">{item.ProductType}</td>
                                <td className="p-2 border border-black">{item.Condition}</td>
                                <td className="p-2 border border-black">{item.VIN}</td>
                                <td className="p-2 border border-black">{item.Year}</td>
                                <td className="p-2 border border-black">{item.Make}</td>
                                <td className="p-2 border border-black">{item.Model}</td>
                                <td className="p-2 border border-black">{item.Term}</td>
                                <td className="p-2 border border-black">{item.CoApplicant}</td>
                                <td className="p-2 border border-black">{item.EmploymentStatusApp}</td>
                                <td className="p-2 border border-black">{item.EmploymentStatusCoApp}</td>
                                <td className="p-2 border border-black">{item.BuyRate}</td>
                                <td className="p-2 border border-black">{item.AdjustedRate}</td>
                                <td className="p-2 border border-black">{item.Difference}</td>
                                <td className="p-2 border border-black">{item.Rule}</td>
                                <td className="p-2 border border-black">{item.OverrideLevel}</td>
                            </tr>

                        ))

                    ) : (
                        <tr>
                                    <td colSpan={10} className="text-center p-4 border border-black">No data available</td>
                                </tr>

                    )}
                </tbody>
            </table>
            </div>
            </section>
        </>

    );

};

export default HaloPage;
