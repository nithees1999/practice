import React, { useState } from 'react';
const haloData = [
    { ProductType: 'Retail', Condition: 'Used/Certified', VIN: '3CZRZ2H54PM700436', Year: 2023, Make: 'Honda', Model: 'RZ2H5PEW', Term: 36, CoApplicant: 'N/A', EmploymentStatusApp: 'N/A', EmploymentStatusCoApp: 'HALO AHFC Associate', BuyRate: 9.20, AdjustedRate: 9.33, Difference: 0.13, Rule: null, OverrideLevel: 1 },
    { ProductType: 'Retail', Condition: 'Used/Certified', VIN: '3CZRZ2H54PM700436', Year: 2023, Make: 'Honda', Model: 'RZ2H5PEW', Term: 36, CoApplicant: 'Joint', EmploymentStatusApp: 'Employed', EmploymentStatusCoApp: 'HALO AHFC Associate', BuyRate: 10.50, AdjustedRate: 10.66, Difference: 0.16, Rule: null, OverrideLevel: 1 },
    { ProductType: 'Retail', Condition: 'Used/Certified', VIN: '19UDE4H24PA001612', Year: 2023, Make: 'Acura', Model: 'DE4H2PJW', Term: 24, CoApplicant: 'N/A', EmploymentStatusApp: 'N/A', EmploymentStatusCoApp: 'HALO Honda Associate', BuyRate: 6.10, AdjustedRate: 6.25, Difference: 0.15, Rule: null, OverrideLevel: 2 },
    { ProductType: 'Retail', Condition: 'Used/Certified', VIN: '19UDE4H24PA001612', Year: 2023, Make: 'Acura', Model: 'DE4H2PJW', Term: 24, CoApplicant: 'Joint', EmploymentStatusApp: 'Employed', EmploymentStatusCoApp: 'HALO Honda Associate', BuyRate: 8.14, AdjustedRate: 8.24, Difference: 0.10, Rule: null, OverrideLevel: 2 },
    { ProductType: 'Balloon', Condition: 'New', VIN: '3CZRZ1H3XPM701650', Year: 2023, Make: 'Honda', Model: 'RZ1H3PEW', Term: 24, CoApplicant: 'N/A', EmploymentStatusApp: 'N/A', EmploymentStatusCoApp: 'HALO Honda Associate', BuyRate: 8.70, AdjustedRate: 8.81, Difference: 0.11, Rule: null, OverrideLevel: 2 },
    // Add remaining data...
];
const HaloPage = () => {
    const [selectedProductType, setSelectedProductType] = useState('');
    const [selectedCondition, setSelectedCondition] = useState('');
    const [selectedEmploymentStatusApp, setSelectedEmploymentStatusApp] = useState('');
    const [selectedEmploymentStatusCoApp, setSelectedEmploymentStatusCoApp] = useState('');
    const [filteredResults, setFilteredResults] = useState(haloData); // Initialize with all data
    const handleSearch = () => {
        const results = haloData.filter(item => {
            return (
                (selectedProductType ? item.ProductType === selectedProductType : true) &&
                (selectedCondition ? item.Condition === selectedCondition : true) &&
                (selectedEmploymentStatusApp ? item.EmploymentStatusApp === selectedEmploymentStatusApp : true) &&
                (selectedEmploymentStatusCoApp ? item.EmploymentStatusCoApp === selectedEmploymentStatusCoApp : true)
            );
        });
        setFilteredResults(results);
    };
    const uniqueProductTypes = [...new Set(haloData.map(item => item.ProductType))];
    const uniqueConditions = [...new Set(haloData.map(item => item.Condition))];
    const uniqueEmploymentStatusApps = [...new Set(haloData.map(item => item.EmploymentStatusApp))];
    const uniqueEmploymentStatusCoApps = [...new Set(haloData.map(item => item.EmploymentStatusCoApp))];
    
    
    
    
    return (
        <>
            <h1 className="text-center text-xl font-bold p-2 text-blue-700">Halo</h1>
            <form
                className="conditionsNav p-2 m-2 border border-black rounded-md flex justify-start lg:justify-center items-center gap-1 flex-wrap"
                onSubmit={handleSearch} 
                
            >
            <section>
            <label className="px-1 font-medium" htmlFor="producttype">Product Type:</label>
                    
                    <select value={selectedProductType} onChange={(e) => setSelectedProductType(e.target.value)} className="border border-black rounded p-2" required>
                        <option value="">All</option>
                        {uniqueProductTypes.map(type => <option key={type} value={type}>{type}</option>)}
                    </select>
                </section>


                <section>
            <label className="px-1 font-medium" htmlFor="condition">Condition:</label>
                    <select value={selectedCondition} onChange={(e) => setSelectedCondition(e.target.value)} className="border border-black rounded p-2" required>
                        <option value="">All</option>
                        {uniqueConditions.map(condition => <option key={condition} value={condition}>{condition}</option>)}
                    </select>
                </section>


                <section>
            <label className="px-1 font-medium" htmlFor="EmploymentStatusAPP">Employment Status (App):</label>
                    <select value={selectedEmploymentStatusApp} onChange={(e) => setSelectedEmploymentStatusApp(e.target.value)} className="border border-black rounded p-2" required>
                        <option value="">All</option>
                        {uniqueEmploymentStatusApps.map(status => <option key={status} value={status}>{status}</option>)} 
                    </select>
                </section>
                
                <section>
            <label className="px-1 font-medium" htmlFor="EmploymentStatuscoAPP">Employment Status (co-App):</label>
                    <select value={selectedEmploymentStatusCoApp} onChange={(e) => setSelectedEmploymentStatusCoApp(e.target.value)} className="border border-black rounded p-2" required>
                        <option value="">All</option>
                        {uniqueEmploymentStatusCoApps.map(status => <option key={status} value={status}>{status}</option>)}
                    </select>
                </section>
                <button type="submit" className="rounded-md p-2 mx-2 border border-black">Submit</button>
            </form>
            <section className="min-h-screen py-8 px-4 m-2 border border-black rounded-md">
                <div style={{ overflowX: 'auto' }}>
                    <table className="w-full">
                        <thead className="border border-black">
                    <tr>
                        <th className="p-4 border border-black text-blue-700">Product Type</th>
                        <th className="p-4 border border-black text-blue-700">Condition</th>
                        <th className="p-4 border border-black text-blue-700">VIN</th>
                        <th className="p-4 border border-black text-blue-700">Year</th>
                        <th className="p-4 border border-black text-blue-700">Make</th>
                        <th className="p-4 border border-black text-blue-700">Model</th>
                        <th className="p-4 border border-black text-blue-700">Term</th>
                        <th className="p-4 border border-black text-blue-700">Co-Applicant</th>
                        <th className="p-4 border border-black text-blue-700">Employment Status App</th>
                        <th className="p-4 border border-black text-blue-700">Employment Status CoApp</th>
                        <th className="p-4 border border-black text-blue-700">Buy Rate</th>
                        <th className="p-4 border border-black text-blue-700">Adjusted Rate</th>
                        <th className="p-4 border border-black text-blue-700">Difference</th>
                        <th className="p-4 border border-black text-blue-700">Rule</th>
                        <th className="p-4 border border-black text-blue-700">Override Level</th>
                    </tr>
                </thead>
                <tbody>
                    {filteredResults.length > 0 ? (
                        filteredResults.map((item, index) => (
                            <tr key={index}>
                                <td className="p-2 border border-black">{item.ProductType}</td>
                                <td className="p-2 border border-black">{item.Condition}</td>
                                <td className="p-2 border border-black">{item.VIN}</td>
                                <td className="p-2 border border-black">{item.Year}</td>
                                <td className="p-2 border border-black">{item.Make}</td>
                                <td className="p-2 border border-black">{item.Model}</td>
                                <td className="p-2 border border-black">{item.Term}</td>
                                <td className="p-2 border border-black">{item.CoApplicant}</td>
                                <td className="p-2 border border-black">{item.EmploymentStatusApp}</td>
                                <td className="p-2 border border-black">{item.EmploymentStatusCoApp}</td>
                                <td className="p-2 border border-black">{item.BuyRate}</td>
                                <td className="p-2 border border-black">{item.AdjustedRate}</td>
                                <td className="p-2 border border-black">{item.Difference}</td>
                                <td className="p-2 border border-black">{item.Rule}</td>
                                <td className="p-2 border border-black">{item.OverrideLevel}</td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                                    <td colSpan={10} className="text-center p-4 border border-black">No data available</td>
                                </tr>
                    )}
                </tbody>
            </table>
            </div>
            </section>
        </>
    );
};
export default HaloPage;
